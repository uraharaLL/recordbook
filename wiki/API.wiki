#summary Описание API системы
#labels Featured,Phase-Implementation

= Общие сведения =
 * Обмен данными происходит в UTF-8 и JSON. 
 * Общая схема работы со всеми моделями одинакова.
 * URL-схема для всех запросов: /api/<Имя модели>/[<id объекта>/]
 * Дата (датавремя) хранится и передаётся по стандарту ISO 8601.
 * Для авторизации передаётся заголовок "HTTP_AUTHORIZATION" с текстом "Basic ZW50cm9waXVzOmdoand0Y2NqaA==" где после пробела следует строка вида "логин:пароль" закодированная base64. В качестве логина и пароля используются данные администратора системы.

|| HTTP метод || Описание || Формат передаваемых данных || Возвращаемые значения || Ошибки ||
|| GET || Получение всех моделей или одной, если задан параметр id. || - || Модель или список моделей || 404 - объект не найден. ||
|| HEAD || В заголовке ответа 'Modified' хранится дата последнего изменения модели или моделей. || - ||Заголовок "Modified" содержащий датавремя последнего изменения.	|| - ||
|| POST || При заданном параметре id изменяется существующая запись. Иначе - добавляется новая запись. || В raw post data (не знаю как перевести) передаётся объект модели с заполненными. || При создании нового объекта возвращает заголовок "Location", содержащий url созданного объекта относительно сервера и код ответа 201. || 404 - объект не найден. 406 - данные формы переданы неверно. В теле ответа поля, вызвавшие ошибку. ||
|| DELETE || Работает только при заданном id. Удаляет заданный объект. || - || - || 404 - объект не найден ||

В ответе на GET запрос передаётся id во всех моделях.

== Модель School (Школа) == 

name - имя школы.

saturday - шестидневка или нет. Логическое значение.


== Модель Grade (Класс) ==

long_name - название класса.

school_id - id школы класса.


== Модель Teacher (Учитель) == 

last_name - фамилия учителя

first_name - имя учителя

middle_name - отчество учителя

grade_id - id класса, классным руководителем которого, является. Поле не обязательно к заполнению.

school_id - id школы, к которой относится учитель.

grades - классы, в которых преподаёт учитель.

subjects - предметы, которые ведёт учитель.


== Модель Pupil (Ученик) ==

last_name - фамилия ученика.

first_name - имя ученика.

middle_name - отчество ученика. Поле не обязательно к заполнению.

grade_id - класс ученика.

school_id - id школы

group - учебная группа (1 или 2)


== Модель Subject (Предмет) ==

name - название предмета.

schol_id - школа, к которой относится предмет.


== Модель Lesson (Занятие) ==

teacher_id - учитель, добавивший занятие.

date - дата проведения занятия.

topic - тема занятия.

task - домашнее задание. Поле не обязательно к заполнению.

subject_id - id предмета, по которому проводится занятие.

grade - классы, в которых проводится занятие.


== Модель Mark (Отметка) ==

pupil_id - id ученика.

lesson_id - id урока.

mark - id отметки

absent - отсутствовал ли ученик на уроке (bool)

date - дата выставления отметки. Заполняется само.


== Модель ResultDate (Итоговый период) ==

name - имя итогового периода. Поле не обязательно к заполнению.

school_id - id школы

period:
 * '1' -  '1 четверть'
 * '2' - '2 четверть'
 * '5' - '1 полугодие'
 * '3' - '3 четверть'
 * '4' - '4 четверть'
 * '6' - '2 полугодие'

startdate - дата начала

enddate - дата окончания

grades - классы, к которым относится этот итоговый период.


== Модель Result (Итоговая отметка) ==

resultdate_id - id итогового периода.

subject_id - id предмета

pupil_id - id ученика

mark - итоговая отметка
